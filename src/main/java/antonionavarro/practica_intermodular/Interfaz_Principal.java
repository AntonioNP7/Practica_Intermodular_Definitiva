/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package antonionavarro.practica_intermodular;

import java.util.ArrayList;

/**
 *
 * @author antop
 */
public class Interfaz_Principal extends javax.swing.JFrame {

    /**
     * Creates new form Interfaz_Principal
     */
    public Interfaz_Principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selectorPlanetas = new javax.swing.JComboBox<>();
        Estrella = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaSatelites = new javax.swing.JTable();
        TipoEstrella = new javax.swing.JLabel();
        Radio = new javax.swing.JLabel();
        Temperatura = new javax.swing.JLabel();
        Distancia = new javax.swing.JLabel();
        Composicion = new javax.swing.JLabel();
        Titulo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaPlanetas = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        selectorPlanetas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Planeta", "Tierra", "Marte", "Venus", "Saturno", "Jupiter", "Urano", "Mercurio", "Neptuno", " " }));
        selectorPlanetas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectorPlanetasActionPerformed(evt);
            }
        });

        Estrella.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        Estrella.setText("Estrella:  Sol");

        TablaSatelites.setFont(new java.awt.Font("Segoe UI Historic", 1, 10)); // NOI18N
        TablaSatelites.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Radio", "DistanciaMedia", "P.Orbitario", "Temperatura", "Tipo", "Fecha"
            }
        ));
        jScrollPane2.setViewportView(TablaSatelites);

        TipoEstrella.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        TipoEstrella.setText("Tipo de estrella: G2V");

        Radio.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        Radio.setText("Radio: 696340.0 km");

        Temperatura.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        Temperatura.setText("Temperatura: 5500 ºC");

        Distancia.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        Distancia.setText("Distancia: 149.6 km");

        Composicion.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        Composicion.setText("Composicion: 74%  Hidrógeno");

        Titulo.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        Titulo.setText("PRACTICA INTERMODULAR -  1ºDAM");

        TablaPlanetas.setFont(new java.awt.Font("Segoe UI Semibold", 1, 10)); // NOI18N
        TablaPlanetas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Radio(km)", "Temperatura", "Distancia", "P.Orbita", "Composicion", "N.satelites", "Fecha Creacion"
            }
        ));
        jScrollPane1.setViewportView(TablaPlanetas);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sistema_solar.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Sol.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");

        jLabel3.setBackground(new java.awt.Color(102, 102, 255));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Antonio José Navarro Pérez");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(149, 149, 149)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 631, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 631, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 40, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(selectorPlanetas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(384, 384, 384))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(Estrella, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(106, 106, 106)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(76, 76, 76)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Composicion)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(Distancia, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(Temperatura, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(Radio, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(TipoEstrella, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(14, 14, 14))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(Titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(59, 59, 59))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 186, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(TipoEstrella)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Radio)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Temperatura)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Distancia)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Composicion))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(selectorPlanetas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(92, 92, 92)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(Estrella))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectorPlanetasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectorPlanetasActionPerformed
        // TODO add your handling code here:

        // Crea una nueva instancia de la clase Conexion_Intermodular.
        Conexion_Intermodular conexion = new Conexion_Intermodular();

// Obtiene el planeta seleccionado del selector de planetas.
        String selectedPlanet = (String) selectorPlanetas.getSelectedItem();

// Inicializa una lista para almacenar los datos del planeta seleccionado.
        ArrayList<String> planetData = new ArrayList<>();

// Inicializa una lista para almacenar los datos de los satélites del planeta seleccionado.
        ArrayList<ArrayList<String>> satellitesData = new ArrayList<>();

// Llama a los métodos para limpiar las tablas de satélites y planetas antes de cargar nuevos datos.
        clearSatellitesTable();
        clearPlanetsTable();

// Estructura de control para determinar qué planeta ha sido seleccionado.
        switch (selectedPlanet) {
            case "Jupiter":
                // Conecta y consulta los datos de Júpiter y sus satélites.
                planetData = conexion.conectarConsultarJupiter();
                satellitesData.add(conexion.conectarConsultarEuropa());
                satellitesData.add(conexion.conectarConsultarIo());
                satellitesData.add(conexion.conectarConsultarGanimedes());
                satellitesData.add(conexion.conectarConsultarCalisto());
                break;
            case "Saturno":
                // Conecta y consulta los datos de Saturno y sus satélites.
                planetData = conexion.conectarConsultarSaturno();
                satellitesData.add(conexion.conectarConsultarTitan());
                satellitesData.add(conexion.conectarConsultarEncelado());
                break;
            case "Urano":
                // Conecta y consulta los datos de Urano y sus satélites.
                planetData = conexion.conectarConsultarUrano();
                satellitesData.add(conexion.conectarConsultarTitania());
                satellitesData.add(conexion.conectarConsultarOberon());
                break;
            case "Neptuno":
                // Conecta y consulta los datos de Neptuno.
                planetData = conexion.conectarConsultarNeptuno();
                break;
            case "Marte":
                // Conecta y consulta los datos de Marte y sus satélites.
                planetData = conexion.conectarConsultarMarte();
                satellitesData.add(conexion.conectarConsultarFobos());
                satellitesData.add(conexion.conectarConsultarDeimos());
                break;
            case "Tierra":
                // Conecta y consulta los datos de la Tierra y su satélite.
                planetData = conexion.conectarConsultarTierra();
                satellitesData.add(conexion.conectarConsultarLuna());
                break;
            case "Mercurio":
                // Conecta y consulta los datos de Mercurio.
                planetData = conexion.conectarConsultarMercurio();
                break;
            case "Venus":
                // Conecta y consulta los datos de Venus.
                planetData = conexion.conectarConsultarVenus();
                break;
        }

// Rellenar la tabla de planetas con los datos obtenidos.
// Se inicia en 1 para saltarse el primer elemento que puede ser el nombre del planeta.
        for (int i = 1; i < planetData.size(); i++) {
            TablaPlanetas.setValueAt(planetData.get(i), 0, i - 1);
        }

// Rellenar la tabla de satélites con los datos obtenidos.
        for (int i = 0; i < satellitesData.size(); i++) {
            ArrayList<String> satelite = satellitesData.get(i);
            for (int j = 0; j < satelite.size(); j++) {
                TablaSatelites.setValueAt(satelite.get(j), i, j);
            }
        }}
        // Método para limpiar la tabla de satélites, estableciendo todas las celdas a null.
        private void clearSatellitesTable() {
        for (int i = 0; i < TablaSatelites.getRowCount(); i++) {
            for (int j = 0; j < TablaSatelites.getColumnCount(); j++) {
                TablaSatelites.setValueAt(null, i, j);
            }
        }
    }

// Método para limpiar la tabla de planetas, estableciendo todas las celdas a null.
    private void clearPlanetsTable() {
        for (int i = 0; i < TablaPlanetas.getRowCount(); i++) {
            for (int j = 0; j < TablaPlanetas.getColumnCount(); j++) {
                TablaPlanetas.setValueAt(null, i, j);
            }
        }
    

    }//GEN-LAST:event_selectorPlanetasActionPerformed

/**
 * @param args the command line arguments
 */
public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

}
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz_Principal.class  

.getName()).log(java.util.logging.Level.SEVERE, null, ex);

} catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz_Principal.class  

.getName()).log(java.util.logging.Level.SEVERE, null, ex);

} catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz_Principal.class  

.getName()).log(java.util.logging.Level.SEVERE, null, ex);

} catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz_Principal.class  

.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz_Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Composicion;
    private javax.swing.JLabel Distancia;
    private javax.swing.JLabel Estrella;
    private javax.swing.JLabel Radio;
    private javax.swing.JTable TablaPlanetas;
    private javax.swing.JTable TablaSatelites;
    private javax.swing.JLabel Temperatura;
    private javax.swing.JLabel TipoEstrella;
    private javax.swing.JLabel Titulo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> selectorPlanetas;
    // End of variables declaration//GEN-END:variables
}
